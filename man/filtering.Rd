% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/filters.R
\name{filtering}
\alias{filtering}
\alias{gdcGetFilter}
\alias{gdcGetFilter.GDCQuery}
\alias{gdcSetFilter}
\alias{gdcSetFilter.GDCQuery}
\title{Manipulating GDCQuery filters}
\usage{
gdcSetFilter(x, ...)

\method{gdcSetFilter}{GDCQuery}(x, expr)

gdcGetFilter(x, ...)

\method{gdcGetFilter}{GDCQuery}(gdcQuery, expr)
}
\description{
Manipulating GDCQuery filters

The \code{gdcSetFilter} is simply a safe accessor for
the filter element in \code{\link{GDCQuery}} objects.

The \code{gdcGetFilter} is simply a safe accessor for
the filter element in \code{\link{GDCQuery}} objects.
}
\examples{
# make a GDCQuery object to start
pQuery = gdcProjects()
# check for the default fields
# so that we can use one of them to build a filter
gdcDefaultFields(pQuery)
pQuery = gdcSetFilter(pQuery,~ project_id == 'TCGA-LUAC')
gdcGetFilter(pQuery)

# files
fQuery = gdcFiles()
gdcDefaultFields(fQuery)
fQuery = gdcSetFilter(fQuery,~ data_format == 'VCF')
gdcGetFilter(fQuery)
fQuery = gdcSetFilter(fQuery,~ data_format == 'VCF' & experimental_strategy == 'WXS' & type == 'simple_somatic_mutation')
gdcGetFilter(fQuery)
}

